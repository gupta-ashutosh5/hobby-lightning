<?php

/**
 * @file
 * Contains quiz_multichoice.module
 */

/**
 * Implements hook_help().
 */
function quiz_multichoice_help($path, $args) {
  switch ($path) {
    case 'help.page.quiz_multichoice':
      return t("
      <p>This module provides a multiple choice question type for Quiz.</p>

      <p>The module has three settings.
      <em>Multiple answers</em> allows the quiz taker to select more than one alternative
      (it also allows for the possibility that none of the alternatives are correct).
      Alternatives are selected using checkboxes instead of radio buttons.
      <em>Random order</em> displays the alternatives in random order when quiz is beeing taken.
      <em>Simple scoring</em> gives max score if everything is correct. Zero points otherwise.</p>

      <p>The scoring system in multichoice is a bit complex. With multiple answers each alternative adds a given number of points to
      the total score if it is chosen, and another number of points is added if the alternative isn't chosen. Both <em>score if chosen</em> and
      <em>score if not chosen</em> may be edited for each alternative by the question creator.
      If multiple answers isn't allowed the score will be set to the <em>score if chosen</em> of the alternative that has been chosen.
      The question is considered correct if the quiz taker gets the maximum amount of points possible for the question.</p>
    ");
  }
}

/**
 * Implements hook_quiz_question_config().
 */
function multichoice_quiz_question_config() {
  $form['multichoice_def_scoring'] = array(
    '#type' => 'radios',
    '#title' => t('Default scoring method'),
    '#description' => t('Choose the default scoring method for questions with multiple correct answers.'),
    '#options' => array(
      0 => t('Give minus one point for incorrect answers'),
      1 => t("Give one point for each incorrect option that haven't been chosen"),
    ),
    '#default_value' => variable_get('multichoice_def_scoring', 0),
  );
  $form['#validate'][] = 'multichoice_config_validate';
  return $form;
}

/**
 * Implements hook_theme().
 */
function multichoice_theme($existing, $type, $theme, $path) {
  return array(
    'multichoice_answer_node_view' => array(
      'variables' => array(
        'alternatives' => NULL,
        'show_correct' => NULL,
      ),
      'path' => $path,
      'file' => 'multichoice.theme.inc',
    ),
  );
}

/**
 * Implements hook_user_cancel().
 */
function multichoice_user_cancel($edit, $account, $method) {
  db_delete('quiz_multichoice_user_settings')
    ->condition('uid', $account->uid)
    ->execute();
}
